Topic:,Problem: ,Done [yes or no] ,,,
,,,,,
Array,Reverse the array,yes,,,
Array,Find the maximum and minimum element in an array,yes,,,
Array,"Find the ""Kth"" max and min element of an array ",yes,,,
Array,"Given an array which consists of only 0, 1 and 2. Sort the array without using any sorting algo",yes,,,
Array,Move all the negative elements to one side of the array ,yes,,,
Array,Find the Union and Intersection of the two sorted arrays.,yes,,,
Array,Write a program to cyclically rotate an array by one.,yes,,,
Array,find Largest sum contiguous Subarray [V. IMP],yes,,,
Array,Minimise the maximum difference between heights [V.IMP],<->,,,
Array,Minimum no. of Jumps to reach end of an array,yes,max reach and steps,,
Array,find duplicate in an array of N+1 Integers,yes,,,
Array,Merge 2 sorted arrays without using Extra space.,yes,take i=n-1 of 1st array and j=0 of 2nd array and check while a1[i] > a2[j] then swap em,,
Array,Kadane's Algo [V.V.V.V.V IMP],yes,,,
Array,Merge Intervals,yes,,,
Array,Next Permutation,yes,,,
Array,Count Inversion,yes,merge sort,,
Array,Best time to buy and Sell stock,yes,"min price value, max proft",,
Array,find all pairs on integer array whose sum is equal to given number,yes,unordered map,,
Array,find common elements In 3 sorted arrays,yes,unordered map,,
Array,Rearrange the array in alternating positive and negative items with O(1) extra space,yes,,,
Array,Find if there is any subarray with sum equal to 0,yes,solved using sets by adding sums and checking if the next sum is already present in array then there is a 0 sum,,
Array,Largest subarray with 0 sum,yes,"len = max(len, i- u[lastsum]) u[0] = -1",,
Array,Find factorial of a large number,<->,,,
Array,take maxproduct and min product,yes,maxproduct and minproduct ,,
Array,Find longest coinsecutive subsequence,yes,,,
Array,"Given an array of size n and a number k, fin all elements that appear more than "" n/k "" times.",<->,,,
Array,Maximum profit by buying and selling a share atmost twice,yes,"take ma and iterate from right, then take mi and iteratre from left",,
Array,Find whether an array is a subset of another array,yes,,,
Array,Find the triplet that sum to a given value,yes,sort then travese from left to right,,
Array,Trapping Rain water problem,yes,take left and right maximim,,
Array,Chocolate Distribution problem,yes,sort and then find min diff of arr[i] and arr[i+m-1],,
Array,Smallest Subarray with sum greater than a given value,yes,"cur_sum , start and end",,
Array,Three way partitioning of an array around a given value,yes,if smaller than a then swap with a[l] and similarly for white,,
Array,Minimum swaps required bring elements less equal K together,yes,sliding window problem,,
Array,Minimum no. of operations required to make an array palindrome,yes,,,
Array,Median of 2 sorted arrays of equal size,yes,,,
Array,Median of 2 sorted arrays of different size,<->,,,
,,<->,,,
,,<->,,,
Matrix,Spiral traversal on a Matrix,yes,check in for condition both up<=bottom and left<=right,,
Matrix,Search an element in a matriix,yes,,,
Matrix,Find median in a row wise sorted matrix,yes,store in vectot and then sort and find median of vector,,
Matrix,Find row with maximum no. of 1's,yes,traverse with column first,,
Matrix,Print elements in sorted order using row-column wise sorted matrix,yes,,,
Matrix,Maximum size rectangle,<->,,,
Matrix,Find a specific pair in matrix,<->,,,
Matrix,Rotate matrix by 90 degrees,<->,,,
Matrix,Kth smallest element in a row-cpumn wise sorted matrix,yes,store in vector and sort,,
Matrix,Common elements in all rows of a given matrix,yes,,,
,,,,,
,,,,,
String,Reverse a String,yes,,,
String,Check whether a String is Palindrome or not,yes,,,
String,Find Duplicate characters in a string,yes,unordered map,,
String,Why strings are immutable in Java?,<->,,,
String,Write a Code to check whether one string is a rotation of another,yes,,,
String,Write a Program to check whether a string is a valid shuffle of two strings or not,<->,,,
String,Count and Say problem,<->,,,
String,Write a program to find the longest Palindrome in a string.[ Longest palindromic Substring],<->,,,
String,Find Longest Recurring Subsequence in String,yes,created a 2d dp array and ran 2 for loops,,
String,Print all Subsequences of a string.,<->,,,
String,Print all the permutations of the given string,yes,use stl : next_permutation,,
String,Split the Binary string into two substring with equal 0’s and 1’s,<->,,,
String,Word Wrap Problem [VERY IMP].,<->,,,
String,EDIT Distance [Very Imp],yes,created a 2d dp array and ran 2 for loops,,
String,Find next greater number with same set of digits. [Very Very IMP],yes,use stl : next_permutation,,
String,Balanced Parenthesis problem.[Imp],yes,used hash map int u[3],,
String,Word break Problem[ Very Imp],yes,stored dict elemnts in set then checked str in for loop,,
String,Rabin Karp Algo,<->,,,
String,KMP Algo,<->,,,
String,Convert a Sentence into its equivalent mobile numeric keypad sequence.,yes,store corresponding value of alphabets in a string array,,
String,Minimum number of bracket reversals needed to make an expression balanced.,yes,store the position of [ in array then if count <0 total+=v[i]-i,,
String,Count All Palindromic Subsequence in a given String.,<->,,,
String,Count of number of given string in 2D character array,<->,,,
String,Search a Word in a 2D Grid of characters.,<->,,,
String,Boyer Moore Algorithm for Pattern Searching.,<->,,,
String,Converting Roman Numerals to Decimal,yes,while string length is not equal to 0 solve by making if statements and use substr and not s[i] + s[i+1],,
String,Longest Common Prefix,yes,solved using 2 for loops or can do while this prefix is not at the starting of another decrement b=its length by 1 ,,
String,Number of flips to make binary string alternate,yes,take 2 possibille array 01010.. and 1010... and count the difference between original and duplicate array,,
String,Find the first repeated word in string.,yes,use unordered map and set the most frequent string to 0,,
String,Minimum number of swaps for bracket balancing.,yes,,,
String,Find the longest common subsequence between two strings.,<->,,,
String,Program to generate all possible valid IP addresses from given  string.,<->,,,
String,Write a program tofind the smallest window that contains all characters of string itself.,<->,,,
String,Rearrange characters in a string such that no two adjacent are same,<->,,,
String,Minimum characters to be added at front to make string palindrome,<->,,,
String,"Given a sequence of words, print all anagrams together",yes,"zero sum approach, create one unordered map and bool visited and check every element with element +1 if it is an anagram",,
String,Find the smallest window in a string containing all characters of another string,<->,,,
String,Recursively remove all adjacent duplicates,<->,,,
String,String matching where one string contains wildcard characters,<->,,,
String,Function to find Number of customers who could not get a computer,<->,,,
String,Transform One String to Another using Minimum Number of Given Operation,<->,,,
String,Check if two given strings are isomorphic to each other,yes,map str1 and make str2 from that map  and check if they are equal  and similarly for str2 and check if str1 ,,
String,Recursively print all sentences that can be formed from list of word lists,<->,,,
,,,,,
,,,,,
Searching & Sorting,Find first and last positions of an element in a sorted array,<->,,,
Searching & Sorting,Find a Fixed Point (Value equal to index) in a given array,yes,easy,,
Searching & Sorting,Search in a rotated sorted array,yes,easy,,
Searching & Sorting,square root of an integer,yes,i<=sqrt(n),,
Searching & Sorting,Maximum and minimum of an array using minimum number of comparisons,yes,easy,,
Searching & Sorting,Optimum location of point to minimize total distance,<->,,,
Searching & Sorting,Find the repeating and the missing,yes,unorderd map ki takat dhum machaye,,
Searching & Sorting,find majority element,yes,unorderd map ki takat dhum machaye,,
Searching & Sorting,Searching in an array where adjacent differ by at most k,song,,,
Searching & Sorting,find a pair with a given difference,yes, unorderd map ki takat dhum machaye stored element in map then checked if arr[i] + key is there in map or not,,
Searching & Sorting,find four elements that sum to a given value,<->,,,
Searching & Sorting,maximum sum such that no 2 elements are adjacent,<->,,,
Searching & Sorting,Count triplet with sum smaller than a given value,yes,"triplet way for loop , l, r and a while loop and trick is if a[i]+a[l]+a[r]<sum then this means there are r-l smaller than sum",,
Searching & Sorting,merge 2 sorted arrays,yes,,,
Searching & Sorting,print all subarrays with 0 sum,<->,,,
Searching & Sorting,Product array Puzzle,<->,,,
Searching & Sorting,Sort array according to count of set bits,yes,used stable sort and __builtin_popcount(i1) to count no of set(1) bits,,
Searching & Sorting,minimum no. of swaps required to sort the array,<->,,,
Searching & Sorting,Bishu and Soldiers,yes,easy,,
Searching & Sorting,Rasta and Kheshtak,<->,,,
Searching & Sorting,Kth smallest number again,<->,,,
Searching & Sorting,Find pivot element in a sorted array,<->,,,
Searching & Sorting,K-th Element of Two Sorted Arrays,yes,SORT,,
Searching & Sorting,Aggressive cows,<->,,,
Searching & Sorting,Book Allocation Problem,<->,,,
Searching & Sorting,EKOSPOJ:,<->,,,
Searching & Sorting,Job Scheduling Algo,<->,,,
Searching & Sorting,Missing Number in AP,<->,,,
Searching & Sorting,Smallest number with atleastn trailing zeroes infactorial,<->,,,
Searching & Sorting,Painters Partition Problem:,yes,take low = 0 and high=5*n and then find if middle value has at least n number of 0s.,,
Searching & Sorting,ROTI-Prata SPOJ,<->,,,
Searching & Sorting,DoubleHelix SPOJ,<->,,,
Searching & Sorting,Subset Sums,<->,,,
Searching & Sorting,Findthe inversion count,<->,,,
Searching & Sorting,Implement Merge-sort in-place,<->,,,
Searching & Sorting,Partitioning and Sorting Arrays with Many Repeated Entries,<->,,,
,,,,,
,,,,,
LinkedList,Write a Program to reverse the Linked List. (Both Iterative and recursive),yes,changing the direction of pointer,,
LinkedList,Reverse a Linked List in group of Given Size. [Very Imp],yes,"""""",,
LinkedList,Write a program to Detect loop in a linked list.,yes,done using u map,,
LinkedList,Write a program to Delete loop in a linked list.,yes,start with prev and cur pointer and umap if u[cur] is present then make the next of prev to NULL,,
LinkedList,Find the starting point of the loop. ,<->,,,
LinkedList,Remove Duplicates in a sorted Linked List.,yes,head->next = head->next>next,,
LinkedList,Remove Duplicates in a Un-sorted Linked List.,yes,umap and prev and next,,
LinkedList,Write a Program to Move the last element to Front in a Linked List.,yes,,,
LinkedList,Add “1” to a number represented as a Linked List.,yes,done by reversing the ll,,
LinkedList,Add two numbers represented by linked lists.,yes,,,
LinkedList,Intersection of two Sorted Linked List.,yes,implemented with vector and its OP unique function,,
LinkedList,Intersection Point of two Linked Lists.,yes,find length difff and then while(head2!=head1),,
LinkedList,Merge Sort For Linked lists.[Very Important],yes,save in vector and sort,,
LinkedList,Quicksort for Linked Lists.[Very Important],<->,,,
LinkedList,Find the middle Element of a linked list.,yes,found length and then used for loop to traverse to len/2,,
LinkedList,Check if a linked list is a circular linked list.,yes,start from second node and then traverse and check if it is equal to fitrst node,,
LinkedList,Split a Circular linked list into two halves.,<->,,,
LinkedList,Write a Program to check whether the Singly Linked list is a palindrome or not.,yes,store in vetor,,
LinkedList,Deletion from a Circular Linked List.,<->,,,
LinkedList,Reverse a Doubly Linked list.,yes,goto the last node and then reverse the prec and next pointers,,
LinkedList,Find pairs with a given sum in a DLL.,<->,,,
LinkedList,Count triplets in a sorted DLL whose sum is equal to given value “X”.,<->,,,
LinkedList,Sort a “k”sorted Doubly Linked list.[Very IMP],<->,,,
LinkedList,Rotate DoublyLinked list by N nodes.,<->,,,
LinkedList,Rotate a Doubly Linked list in group of Given Size.[Very IMP],<->,,,
LinkedList,Can we reverse a linked list in less than O(n) ?,<->,,,
LinkedList,Why Quicksort is preferred for. Arrays and Merge Sort for LinkedLists ?,<->,,,
LinkedList,Flatten a Linked List,<->,,,
LinkedList,"Sort a LL of 0's, 1's and 2's",yes,store in vector and make new ll,,
LinkedList,Clone a linked list with next and random pointer,<->,,,
LinkedList,Merge K sorted Linked list,yes,store in vector and make new ll,,
LinkedList,Multiply 2 no. represented by LL,yes,convert in nos,,
LinkedList,Delete nodes which have a greater value on right side,yes,done with vector,,
LinkedList,Segregate even and odd nodes in a Linked List,yes,done with vector,,
LinkedList,Program for n’th node from the end of a Linked List,yes,done with vector,,
LinkedList,Find the first non-repeating character from a stream of characters,yes,done with queue,,
,,,,,
,,,,,
Binary Trees,level order traversal,yes,donw with q of Node* pehle left fir right,,
Binary Trees,Reverse Level Order traversal,yes,pehle right fir left,,
Binary Trees,Height of a tree,yes,,,
Binary Trees,Diameter of a tree,yes,,,
Binary Trees,Mirror of a tree,<->,,,
Binary Trees,Inorder Traversal of a tree both using recursion and Iteration,yes,,,
Binary Trees,Preorder Traversal of a tree both using recursion and Iteration,yes,,,
Binary Trees,Postorder Traversal of a tree both using recursion and Iteration,yes,,,
Binary Trees,Left View of a tree,yes,pehla element q se uthate hue,,
Binary Trees,Right View of Tree,yes,,,
Binary Trees,Top View of a tree,yes,"q of pair <pointer and h> and map ,agar map me value 0 hai to update karenge nhi to nhi",,
Binary Trees,Bottom View of a tree,yes,isme last wala hoga,,
Binary Trees,Zig-Zag traversal of a binary tree,yes,how to store the nodes in a level wise,,
Binary Trees,Check if a tree is balanced or not,yes,done usong height and level order traversal,,
Binary Trees,Diagnol Traversal of a Binary tree,<->,,,
Binary Trees,Boundary traversal of a Binary tree,yes,,,
Binary Trees,Construct Binary Tree from String with Bracket Representation,<->,,,
Binary Trees,Convert Binary tree into Doubly Linked List,<->,,,
Binary Trees,Convert Binary tree into Sum tree,yes,donw using recursion,,
Binary Trees,Construct Binary tree from Inorder and preorder traversal,yes,root k left wale left me right wale right me,,
Binary Trees,Find minimum swaps required to convert a Binary tree into BST,<->,,,
Binary Trees,Check if Binary tree is Sum tree or not,yes,!root->left and !root->right : leaf node,,
Binary Trees,Check if all leaf nodes are at same level or not,yes,take a height ma and store the height of first leaf and then check if the height of another leaf nofe is not equal to ma thne retyrn false,,
Binary Trees,Check if a Binary Tree contains duplicate subtrees of size 2 or more [ IMP ],<->,,,
Binary Trees,Check if 2 trees are mirror or not,yes,store the edges in hash map and then check ,,
Binary Trees,Sum of Nodes on the Longest path from root to leaf node ,yes,stored in vector[0] : height amd v[1] : sum & solved for left and right subtree if height of left is more return it and vice versa,,
Binary Trees,Check if given graph is tree or not.  [ IMP ],<->,,,
Binary Trees,Find Largest subtree sum in a tree,<->,,,
Binary Trees,Maximum Sum of nodes in Binary tree such that no two are adjacent ,<->,,,
Binary Trees,"Print all ""K"" Sum paths in a Binary tree",<->,,,
Binary Trees,Find LCA in a Binary tree,yes,checked if n1 and n2 are present in every node,,
Binary Trees,Find distance between 2 nodes in a Binary tree,yes,find lca and then find its distance from given nodes,,
Binary Trees,Kth Ancestor of node in a Binary tree,<->,,,
Binary Trees,Find all Duplicate subtrees in a Binary tree [ IMP ],<->,,,
Binary Trees,Tree Isomorphism Problem,yes,checked if left subtree is equla to right subtree and also by swapping,,
,,,,,
,,,,,
Binary Search Trees,Fina a value in a BST,yes,easy if key>root->data serach in right part and vv,,
Binary Search Trees,Deletion of a node in a BST,yes,3 cases. 4 in 3rd subcase are simple so if node to be deleted has right and left child then pick the max val from left subtree and store its value in root and then delete it from left subtree,,
Binary Search Trees,Find min and max value in a BST,yes,easy smallest value in leftmost node,,
Binary Search Trees,Find inorder successor and inorder predecessor in a BST,<->,,,
Binary Search Trees,Check if a tree is a BST or not ,yes,stored in q and then checked if root's left subtree's max value > root's data and similarly for right,,
Binary Search Trees,Populate Inorder successor of all nodes,<->,,,
Binary Search Trees,Find LCA  of 2 nodes in a BST,yes,same as bt,,
Binary Search Trees,Construct BST from preorder traversal,<->,,,
Binary Search Trees,Convert Binary tree into BST,yes,,,
Binary Search Trees,Convert a normal BST into a Balanced BST,<->,,,
Binary Search Trees,Merge two BST [ V.V.V>IMP ],<->,,,
Binary Search Trees,Find Kth largest element in a BST,<->,,,
Binary Search Trees,Find Kth smallest element in a BST,<->,,,
Binary Search Trees,"Count pairs from 2 BST whose sum is equal to given value ""X""",<->,,,
Binary Search Trees,Find the median of BST in O(n) time and O(1) space,<->,,,
Binary Search Trees,Count BST ndoes that lie in a given range,<->,,,
Binary Search Trees,Replace every element with the least greater element on its right,<->,,,
Binary Search Trees,"Given ""n"" appointments, find the conflicting appointments",<->,,,
Binary Search Trees,Check preorder is valid or not,<->,,,
Binary Search Trees,Check whether BST contains Dead end,<->,,,
Binary Search Trees,Largest BST in a Binary Tree [ V.V.V.V.V IMP ],<->,,,
Binary Search Trees,Flatten BST to sorted list,<->,,,
,,,,,
,,,,,
Greedy,Activity Selection Problem,yes,made a vector of a pairs and sort them on the basis of finishing time then iterate thru i=0 and j=1,,
Greedy,Job SequencingProblem,yes, sort array in descending order of profit and then  make slots to fill in th e jobs,,
Greedy,Huffman Coding,<->,,,
Greedy,Water Connection Problem,<->,,,
Greedy,Fractional Knapsack Problem,yes,always convert in to double wherever required,,
Greedy,Greedy Algorithm to find Minimum number of Coins,<->,,,
Greedy,Maximum trains for which stoppage can be provided,<->,,,
Greedy,Minimum Platforms Problem,yes, first sort both arr and dep then if(arr[i]<=dep[j]) increment platform ,,
Greedy,Buy Maximum Stocks if i stocks can be bought on i-th day,<->,,,
Greedy,Find the minimum and maximum amount to buy all N candies,yes,easy sort and then find a=ceil((double)N/(K+1)); for min ascending ,,
Greedy,Minimize Cash Flow among a given set of friends who have borrowed money from each other,<->,,,
Greedy,Minimum Cost to cut a board into squares,<->,,,
Greedy,Check if it is possible to survive on Island,<->,,,
Greedy,Find maximum meetings in one room,<->,,,
Greedy,Maximum product subset of an array,<->,,,
Greedy,Maximize array sum after K negations,yes,loop from 1tok then if i==n-1 then break or if any of them is +ve then also break,,
Greedy,Maximize the sum of arr[i]*i,<->,,,
Greedy,Maximum sum of absolute difference of an array,yes,iterate from back and front,,
Greedy,Maximize sum of consecutive differences in a circular array,yes,,,
Greedy,Minimum sum of absolute difference of pairs of two arrays,<->,,,
Greedy,Program for Shortest Job First (or SJF) CPU Scheduling,<->,,,
Greedy,Program for Least Recently Used (LRU) Page Replacement algorithm,<->,,,
Greedy,Smallest subset with sum greater than all other elements,<->,,,
Greedy,Chocolate Distribution Problem,yes,sort and then find max a[m+i-1] - a[i],,
Greedy,DEFKIN -Defense of a Kingdom,<->,,,
Greedy,DIEHARD -DIE HARD,<->,,,
Greedy,GERGOVIA -Wine trading in Gergovia,<->,,,
Greedy,Picking Up Chicks,<->,,,
Greedy,CHOCOLA –Chocolate,<->,,,
Greedy,ARRANGE -Arranging Amplifiers,<->,,,
Greedy,K Centers Problem,<->,,,
Greedy,Minimum Cost of ropes,<->,,,
Greedy,Find smallest number with given number of digits and sum of digits,<->,,,
Greedy,Rearrange characters in a string such that no two adjacent are same,<->,,,
Greedy,Find maximum sum possible equal sum of three stacks,<->,,,
,,,,,
,,,,,
BackTracking,Rat in a maze Problem,<->,,,
BackTracking,Printing all solutions in N-Queen Problem,<->,,,
BackTracking,Word Break Problem using Backtracking,<->,,,
BackTracking,Remove Invalid Parentheses,<->,,,
BackTracking,Sudoku Solver,<->,,,
BackTracking,m Coloring Problem,<->,,,
BackTracking,Print all palindromic partitions of a string,<->,,,
BackTracking,Subset Sum Problem,<->,,,
BackTracking,The Knight’s tour problem,<->,,,
BackTracking,Tug of War,<->,,,
BackTracking,Find shortest safe route in a path with landmines,<->,,,
BackTracking,Combinational Sum,<->,,,
BackTracking,Find Maximum number possible by doing at-most K swaps,<->,,,
BackTracking,Print all permutations of a string ,<->,,,
BackTracking,Find if there is a path of more than k length from a source,<->,,,
BackTracking,Longest Possible Route in a Matrix with Hurdles,<->,,,
BackTracking,Print all possible paths from top left to bottom right of a mXn matrix,<->,,,
BackTracking,Partition of a set intoK subsets with equal sum,<->,,,
BackTracking,Find the K-th Permutation Sequence of first N natural numbers,<->,,,
,,,,,
,,,,,
Stacks & Queues, Implement Stack from Scratch,<->,,,
Stacks & Queues, Implement Queue from Scratch,<->,,,
Stacks & Queues,Implement 2 stack in an array,<->,,,
Stacks & Queues,find the middle element of a stack,<->,,,
Stacks & Queues,"Implement ""N"" stacks in an Array",<->,,,
Stacks & Queues,Check the expression has valid or Balanced parenthesis or not.,<->,,,
Stacks & Queues,Reverse a String using Stack,<->,,,
Stacks & Queues,Design a Stack that supports getMin() in O(1) time and O(1) extra space.,<->,,,
Stacks & Queues,Find the next Greater element,<->,,,
Stacks & Queues,The celebrity Problem,<->,,,
Stacks & Queues,Arithmetic Expression evaluation,<->,,,
Stacks & Queues,Evaluation of Postfix expression,<->,,,
Stacks & Queues,Implement a method to insert an element at its bottom without using any other data structure.,<->,,,
Stacks & Queues,Reverse a stack using recursion,<->,,,
Stacks & Queues,Sort a Stack using recursion,<->,,,
Stacks & Queues,Merge Overlapping Intervals,<->,,,
Stacks & Queues,Largest rectangular Area in Histogram,<->,,,
Stacks & Queues,Length of the Longest Valid Substring,<->,,,
Stacks & Queues,Expression contains redundant bracket or not,<->,,,
Stacks & Queues,Implement Stack using Queue,<->,,,
Stacks & Queues,Implement Stack using Deque,<->,,,
Stacks & Queues,Stack Permutations (Check if an array is stack permutation of other),<->,,,
Stacks & Queues,Implement Queue using Stack  ,<->,,,
Stacks & Queues,"Implement ""n"" queue in an array",<->,,,
Stacks & Queues,Implement a Circular queue,<->,,,
Stacks & Queues,LRU Cache Implementationa,<->,,,
Stacks & Queues,Reverse a Queue using recursion,<->,,,
Stacks & Queues,Reverse the first “K” elements of a queue,<->,,,
Stacks & Queues,Interleave the first half of the queue with second half,<->,,,
Stacks & Queues,Find the first circular tour that visits all Petrol Pumps,<->,,,
Stacks & Queues,Minimum time required to rot all oranges,<->,,,
Stacks & Queues,Distance of nearest cell having 1 in a binary matrix,<->,,,
Stacks & Queues,First negative integer in every window of size “k”,<->,,,
Stacks & Queues,Check if all levels of two trees are anagrams or not.,<->,,,
Stacks & Queues,Sum of minimum and maximum elements of all subarrays of size “k”.,<->,,,
Stacks & Queues,Minimum sum of squares of character counts in a given string after removing “k” characters.,<->,,,
Stacks & Queues,Queue based approach or first non-repeating character in a stream.,<->,,,
Stacks & Queues,Next Smaller Element,<->,,,
,,,,,
,,,,,
Heap,Implement a Maxheap/MinHeap using arrays and recursion.,<->,,,
Heap,Sort an Array using heap. (HeapSort),<->,,,
Heap,Maximum of all subarrays of size k.,<->,,,
Heap,“k” largest element in an array,<->,,,
Heap,Kth smallest and largest element in an unsorted array,<->,,,
Heap,Merge “K” sorted arrays. [ IMP ],<->,,,
Heap,Merge 2 Binary Max Heaps,<->,,,
Heap,Kth largest sum continuous subarrays,<->,,,
Heap,Leetcode- reorganize strings,<->,,,
Heap,Merge “K” Sorted Linked Lists [V.IMP],<->,,,
Heap,Smallest range in “K” Lists,<->,,,
Heap,Median in a stream of Integers,<->,,,
Heap,Check if a Binary Tree is Heap,<->,,,
Heap,Connect “n” ropes with minimum cost,<->,,,
Heap,Convert BST to Min Heap,<->,,,
Heap,Convert min heap to max heap,<->,,,
Heap,Rearrange characters in a string such that no two adjacent are same.,<->,,,
Heap,Minimum sum of two numbers formed from digits of an array,<->,,,
,,,,,
,,,,,
Graph,"Create a Graph, print it",yes,,,
Graph,Implement BFS algorithm ,yes,using q,,
Graph,Implement DFS Algo ,yes,recursion,,
Graph,Detect Cycle in Directed Graph using BFS/DFS Algo ,yes,done using pehla aya array if the node comes again and if its true then there is a cycle,,
Graph,Detect Cycle in UnDirected Graph using BFS/DFS Algo ,yes,done using a vector agar node visited nhi hai to use visit karo dfs laga k aur agar visited hai to check karo if it is not equal to itsparent tab return true kardo ,,
Graph,Search in a Maze,yes,done using dfs,,
Graph,Minimum Step by Knight,yes,done using bfs (queue) ; agarkisi square pe dobara pahunch rahe ho to use incremement kardo,,
Graph,flood fill algo,yes,done using a queue,,
Graph,Clone a graph,,,,
Graph,Making wired Connections,yes,connected components question,,
Graph,word Ladder ,no,bfs lagaya loop kiya in q pehle string ko sare a to z alphabet se replace kiya of every position aur check kiya ki woh set me hai ki nahi agar hai to ,,
Graph,Dijkstra algo,<->,,,
Graph,Implement Topological Sort ,yes,done using bfs q,,
Graph,Minimum time taken by each job to be completed given by a Directed Acyclic Graph,,,,
Graph,Find whether it is possible to finish all tasks or not from given dependencies,<->,,,
Graph,Find the no. of Isalnds,yes,connected components question visit kar liya kitne 1 1 se jude hai  ,,
Graph,"Given a sorted Dictionary of an Alien Language, find order of characters",yes,first find out which alphabet is smaller than which by comparing and then make a graph then apply topological sort,,
Graph,Implement Kruksal’sAlgorithm,yes,done using union disjoint sets,,
Graph,Implement Prim’s Algorithm,yes,,,
Graph,Total no. of Spanning tree in a graph,<->,,,
Graph,Implement Bellman Ford Algorithm,yes,"relax all edges n-1 times (relaxing means if(dist[u] + wt < distv])
	                dist[u] = dist[u] + wt; and then check finally one more time if the dist array changed then break and print there is a cycle",,
Graph,Implement Floyd warshallAlgorithm,<->,,,
Graph,Travelling Salesman Problem,<->,,,
Graph,Graph ColouringProblem,<->,,,
Graph,Snake and Ladders Problem,<->,,,
Graph,Find bridge in a graph,yes,if there is a difference in the connected components then there is a bridge,,
Graph,Count Strongly connected Components(Kosaraju Algo),yes,1) sort the vertices according to there finshing time and put thrm in a stack. 2) transpose the graph 3) traverse the stack and count the components,,
Graph,Check whether a graph is Bipartite or Not,yes,node!=val and visited[node] == col for odd cycle,,
Graph,Detect Negative cycle in a graph,yes,,,
Graph,Longest path in a Directed Acyclic Graph,<->,,,
Graph,,<->,,,
Graph,Cheapest Flights Within K Stops,partial ,can be done with bfs ,,
Graph,Oliver and the Game,yes,done with euler tour method which is basically used to find if y is a subtree of x if intimr[y] > intime[x] and outtime[y] < outtime[x],,
Graph,Water Jug problem using BFS,<->,,,
Graph,Water Jug problem using BFS,<->,,,
Graph,Find if there is a path of more thank length from a source,<->,,,
Graph,M-ColouringProblem,<->,,,
Graph,Minimum edges to reverse o make path from source to destination,<->,,,
Graph,Paths to travel each nodes using each edge(Seven Bridges),<->,,,
Graph,Vertex Cover Problem,<->,,,
Graph,Chinese Postman or Route Inspection,<->,,,
Graph,Number of Triangles in a Directed and Undirected Graph,yes,find trace(A^3) / 6,,
Graph,Minimise the cashflow among a given set of friends who have borrowed money from each other,<->,,,
Graph,Two Clique Problem,<->,,,
,Count the paths,yes,made a neighbours vector and used a vector for storing path,,
,,,,,
Trie,Construct a trie from scratch,<->,,,
Trie,Find shortest unique prefix for every word in a given list,<->,,,
Trie,Word Break Problem | (Trie solution),<->,,,
Trie,"Given a sequence of words, print all anagrams together",<->,,,
Trie,Implement a Phone Directory,<->,,,
Trie,Print unique rows in a given boolean matrix,<->,,,
,,,,,
,,,,,
Dynamic Programming,Coin ChangeProblem,yes,"dp[m][n] = solve(a,m,n-a[m]) + solve(a,m-1,n); 1)lo aur coins ko decrement karo ; 2) matlo aur index dexrement karo",,
Dynamic Programming,Knapsack Problem,yes,"made an dp[n+1][W+1] and use this logic for W-wt>=0 return dp[n][W] = max(solve(  W-wt[n-1], wt, val, n-1)+val[n-1], solve(  W, wt, val, n-1)); else return solve(  W, wt, val, n-1));",,
Dynamic Programming,Binomial CoefficientProblem,yes,made by making a pascal triangle,,
Dynamic Programming,Permutation CoefficientProblem,<->,,,
Dynamic Programming,Program for nth Catalan Number,yes,"cat_ *= (4 * i - 2);
		cat_ /= (i + 1);",,
Dynamic Programming,Matrix Chain Multiplication ,<->,,,
Dynamic Programming,Edit Distance,yes,comments in latest code,,
Dynamic Programming,Subset Sum Problem,yes,liya or noahi liya,,
Dynamic Programming,Friends Pairing Problem,yes,dp[i] = d[i-1] + (i-1)*dp[i-2],,
Dynamic Programming,Gold Mine Problem,yes,"top down approach first fill the last column then start from the penultimate column , check dp[i][j] = max(dp[i-1][j], dp[i][j+1], dp[i+][j+1])",,
Dynamic Programming,Assembly Line SchedulingProblem,<->,,,
Dynamic Programming,Painting the Fenceproblem,yes ,"ll = lk , lk = dp[i-1]*ll  (last k do same hai aur last k do different hai)",,
Dynamic Programming,Maximize The Cut Segments,yes,"if(n>=x)
        m1= solve(n-x,x,y,z);
        if(n>=y)
        m2 = solve(n-y,x,y,z);
        if(n>=z)
        m3= solve(n-z,x,y,z);
        dp[n] = 1 + max(m1,max(m2,m3));",,
Dynamic Programming,Longest Common Subsequence,yes,same as longest repeating subseq only difference is to remove i!=j,,
Dynamic Programming,Longest Repeated Subsequence,yes,,,
Dynamic Programming,Longest Increasing Subsequence,yes,"used upper bound int idx = upper_bound(dp,dp+n+1,a[i]) - dp;
           if(a[i] > dp[idx-1] and a[i] < dp[idx] )
           dp[idx] = a[i];",,
Dynamic Programming,Space Optimized Solution of LCS,<->,,,
Dynamic Programming,LCS (Longest Common Subsequence) of three strings,yes,same as lcs of 2 strings but here we have 3 loops,,
Dynamic Programming,Maximum Sum Increasing Subsequence,yes,"if a[j] < a[i] then dp[i] = max(dp[i],dp[j] + arr[i] ) aur agr dp[i] ==0 then dp[i] = arr[i] ",,
Dynamic Programming,Count all subsequences having product less than K,<->,,,
Dynamic Programming,Longest subsequence such that difference between adjacent is one,yes,"same strategy if (abs(a[i - a[j]) == 1 then dp[i] = max(dp[j]+1 , dp[i])",-a[j,] =
Dynamic Programming,Maximum subsequence sum such that no three are consecutive,yes ,"simpel output[i] = max(output[i-2] + arr[i], output[i-1]) and lat last return outpur[n-1]",,
Dynamic Programming,Egg Dropping Problem,<->,,,
Dynamic Programming,Maximum Length Chain of Pairs,yes,same trick,,
Dynamic Programming,Maximum size square sub-matrix with all 1s,yes ,trick : pehle sab 0 ko 0 se  map karo then fill the border row and column as it is,,
Dynamic Programming,Maximum sum of pairs with specific difference,yes,if(diff < k) then sum+=arr[i]+arr[i+1],,
Dynamic Programming,Min Cost PathProblem,yes,"slight variation of gold miners problem dp[i][j] = max(dp[i][j], mat[i][j], dp[i+1][j+1])   i+1 hamesha rahega , j+1 : jaha change karna hai",,
Dynamic Programming,Maximum difference of zeros and ones in binary string,yes,"agar 1 hai to use max(0,dp[-1]-1) kaor aur agar 0 hai to dp[i-1]+1 karo",,
Dynamic Programming,Minimum number of jumps to reach end,<->,,,
Dynamic Programming,Minimum cost to fill given weight in a bag,yes,variation if kanpsack,,
Dynamic Programming,Minimum removals from array to make max –min <= K,<->,,,
Dynamic Programming,Longest Common Substring,yes,subsequence ka ulat isme top down approach lagayenge aur if s1[i]!=s2[j] then dp[i][j]=0,,
Dynamic Programming,Count number of ways to reacha given score in a game,yes ,"variatiion of coin  change problem return dp[m][n] = solve(S,m,n-S[m]) + solve(S,m-1,n);",,
Dynamic Programming,Count Balanced Binary Trees of Height h,<->,,,
Dynamic Programming,LargestSum Contiguous Subarray [V>V>V>V IMP ],yes,agar positive hai to mai tere me judna chahunga,,
Dynamic Programming,Smallest sum contiguous subarray,yes,kadane ka ulta,,
Dynamic Programming,Unbounded Knapsack (Repetition of items allowed),yes,slight variation of knapsack just include the included wt,,
Dynamic Programming,Word Break Problem,yes,"abcd me a ko search kiya aur bcd ko recursion me bheja , loginc: if(f==1 and solve(s.substr(i,l-i),B)==1)",,
Dynamic Programming,Largest Independent Set Problem,<->,,,
Dynamic Programming,Partition problem,<->,,,
Dynamic Programming,Longest Palindromic Subsequence,yes,"same as longest common substring yaha s1=s, s2=revese(s)",,
Dynamic Programming,Count All Palindromic Subsequence in a given String,yes,,,
Dynamic Programming,Longest Palindromic Substring,yes,similar as longest common substring but did a little change when calculating max also check the string formed by it is palindrome then only update the ma,,
Dynamic Programming,Longest alternating subsequence,yes,"trick : use switch variable f and if(f==1){
		        if(nums[i] > nums[i-1]){
		            dp[i] = dp[i-1] + 1;
		            f=0;
		        }
		        else
		        dp[i] = dp[i-1];
		        }",,
Dynamic Programming,Weighted Job Scheduling,<->,,,
Dynamic Programming,Coin game winner where every player has three choices,<->,,,
Dynamic Programming,Count Derangements (Permutation such that no element appears in its original position) [ IMPORTANT ],yes,jbk,c[n] = (n-1)*(c[n-1]+c[n-2]),
Dynamic Programming,Maximum profit by buying and selling a share at most twice [ IMP ],<->,countDer(n) = (n - 1) * [countDer(n - 1) + countDer(n - 2)],,
Dynamic Programming,Optimal Strategy for a Game,yes,"agar maine i udhaya to mujhe min dp[i+1][j], dp[i+2][j]) milega kyunku dusra player bhii optimally khel rha hai","int v1 = arr[i] + min(dp[i+1][j-1], dp[i+2][j]);
                int v2 = arr[j] + min(dp[i][j-2], dp[i+1][j-1]);
                dp[i][j] = max(v1, v2);",
Dynamic Programming,Optimal Binary Search Tree,<->,,,
Dynamic Programming,Palindrome PartitioningProblem,<->,,,
Dynamic Programming,Word Wrap Problem,<->,,,
Dynamic Programming,Mobile Numeric Keypad Problem [ IMP ],yes,simple pehle dp[0][j] me 0 and dp[1][j] me 1 store fir correspondingly dp[i][j] =  dp[i-1][jo num press kar sakte hai],,
Dynamic Programming,Boolean Parenthesization Problem,yes,,,
Dynamic Programming,Largest rectangular sub-matrix whose sum is 0,<->,,,
Dynamic Programming,Largest area rectangular sub-matrix with equal number of 1’s and 0’s [ IMP ],<->,,,
Dynamic Programming,Maximum sum rectangle in a 2D matrix,yes,done by adding corresponding elements of row starting and finding max sum subarray,,
Dynamic Programming,Maximum profit by buying and selling a share at most k times,yes,"kth din ka profit maximum(ek din pehle hi agar k transaction ho gaye ho uska value, ek din pehle i-1 transaction hue ho + uss din max of wo din ka transaction - usse pehle ka transaction",,
Dynamic Programming,Find if a string is interleaved of two other strings,yes,"if(n-1>=0 and A[n-1] == C[len-1])
         a=solve(A,B,C,n-1,m,len-1);
        if(m-1>=0 and B[m-1] == C[len-1])
         b=solve(A,B,C,n,m-1,len-1);",,
Dynamic Programming,Maximum Length of Pair Chain,yes,"trick : for(int i=1;i<n;i++){
            for(int j=0;j<i;j++){
                if(pairs[j][1] < pairs[i][0]){
                    dp[i] = max(dp[i], dp[j] + 1);
                }
            }
        }",i ka loop fir j ka loop,
,,,,,
,,,,,
Bit Manipulation,Count set bits in an integer,yes,__builtin_popcount(n),,
Bit Manipulation,Find the two non-repeating elements in an array of repeating elements,yes,,,
Bit Manipulation,Count number of bits to be flipped to convert A to B,yes,__builtin_popcount(a xor b),,
Bit Manipulation,Count total set bits in all numbers from 1 to n,yes,"let x be the highest power that is <= n then, ans = 2^(x-1)*x + n-2^(x)+1 + solve(n-2^(x))",,
Bit Manipulation,Program to find whether a no is power of two,yes,find power of 2 by log2 trick,catch: take special case for 0,
Bit Manipulation,Find position of the only set bit,yes,agar only 1 bit set hai to wo 2 ka power hoga,,
Bit Manipulation,Copy set bits in a range,<->,,,
Bit Manipulation,"Divide two integers without using multiplication, division and mod operator",<->,,,
Bit Manipulation,"Calculate square of a number without using *, / and pow()",<->,,,
Bit Manipulation,Power Set,yes,used bitset<16> b,,
,,,,,
,,,,,
Miscellaneous,Stock buy and sell,graph jab jab inc ho tabhi profit banane ka,,,